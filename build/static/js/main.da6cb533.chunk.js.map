{"version":3,"sources":["components/Footer.js","components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Footer","className","href","Note","note","toggleImportance","label","important","content","onClick","Notification","message","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","randomLetter","String","fromCharCode","Math","floor","random","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","now","date","toISOString","concat","value","onChange","console","log","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAYeA,MARf,WACI,OACI,qBAAKC,UAAU,eAAf,SACI,wDAA0B,mBAAGC,KAAK,6BAAR,+BCSvBC,G,MAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,qBAAIN,UAAU,OAAd,UACGG,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,SCK3BI,G,MAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKV,UAAU,QAAf,SACGU,M,gBCVDC,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCkF5BK,EA3FH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,IAEGlB,MAAK,SAAAmB,GACNT,EAASS,QAEV,IAEH,IAAMC,EAAeC,OAAOC,aAAa,GAAKC,KAAKC,MAAsB,GAAhBD,KAAKE,WA2CxDC,EAAcb,EAClBJ,EACAA,EAAMkB,QAAO,SAAAtC,GAAI,OAAIA,EAAKG,aAE5B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcI,QAASmB,IACvB,8BACE,yBAAQrB,QAAS,kBAAMoB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGa,EAAYE,KAAI,SAAAvC,GAAI,OACjB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBA1CH,SAAAe,GACzB,IAAMhB,EAAOoB,EAAMoB,MAAK,SAAAC,GAAC,OAAIA,EAAEzB,KAAOA,KAChC0B,EAAW,2BAAQ1C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD0B,EACQb,EAAI0B,GACT/B,MAAK,SAAAgC,GACNtB,EAASD,EAAMmB,KAAI,SAAAvC,GAAI,OAAIA,EAAKgB,KAAOA,EAAKhB,EAAO2C,SAEpDC,OAAM,SAAAC,GACLlB,EAAgB,SAAD,OACJ3B,EAAKI,QADD,sCAGf0C,YAAW,WACTnB,EAAgB,QACf,QA2B6BoB,CAAmB/C,EAAKgB,MAF3ChB,EAAKgB,SAMlB,uBAAMgC,SA/DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBnC,GAAIe,EAAeqB,KAAKC,MACxBjD,QAASkB,EACTgC,MAAM,IAAIF,MAAOG,cACjBpD,UAAW+B,KAAKE,SAAW,IAG7BP,EACUsB,GACLxC,MAAK,SAAAgC,GACNtB,EAASD,EAAMoC,OAAOb,IACtBpB,EAAW,QAkDb,UACE,uBACEkC,MAAOnC,EACPoC,SA9BiB,SAACT,GACxBU,QAAQC,IAAIX,EAAMY,OAAOJ,OACzBlC,EAAW0B,EAAMY,OAAOJ,UA8BpB,wBAAQK,KAAK,SAAb,qBAEF,cAAC,EAAD,QCrFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.da6cb533.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Footer.css'\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer-style\">\r\n            <em>designed and built by <a href=\"https://www.armaankara.com\">Armaan Kara</a></em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport './Note.css'\r\n\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\nimport './Notification.css'\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Footer from './components/Footer'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const randomLetter = String.fromCharCode(65 + Math.floor(Math.random() * 26));\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      id: randomLetter + Date.now(),\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />  \n    </div>\n  )\n}\n\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}